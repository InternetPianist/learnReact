{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","value","selectNumber","props","incrementIfOdd","count","decrement","incrementAsync","this","personCount","ref","c","onClick","Component","connect","state","persons","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","placeholder","map","p","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.1ea58615.chunk.js","sourcesContent":["/*\r\n    改模块是用于定义action对象中的type类型的常量值，目的只有一个：便于管理的同时防止程序员单词写错\r\n*/ \r\n\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","/*\r\n    该文件专门为Count组件生成action对象\r\n*/ \r\nimport {INCREMENT,DECREMENT} from '../constant'\r\n\r\n// 同步action,就是指action的值为Object类型的一般对象\r\nexport const increment = data => ({type: INCREMENT,data}) \r\nexport const decrement = data => ({type: DECREMENT,data})\r\n\r\n// 异步action,就是指action的值为函数,异步action中一般都会调用同步action，异步action不是必须要用的\r\nexport const incrementAsync = (data,time) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(increment(data))\r\n        }, time);\r\n    }\r\n}\r\n","import React,{Component} from 'react'\r\n// 引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n//引入action \r\nimport {\r\n    increment,\r\n    decrement,\r\n    incrementAsync\r\n}from '../../redux/actions/count'\r\n\r\n// 定义UI组件\r\nclass Count extends Component {\r\n    increment = () => {\r\n       const {value} = this.selectNumber\r\n       this.props.increment(value*1)\r\n    }\r\n    incrementIfOdd = () => {\r\n        const {value} = this.selectNumber\r\n        const {count,increment} = this.props\r\n        if(count%2!==0) {\r\n            increment(value*1)\r\n        }\r\n    }\r\n    decrement = () => {\r\n        const {value} = this.selectNumber\r\n        this.props.decrement(value*1)\r\n    }\r\n    incrementAsync = () => {\r\n        const {value} = this.selectNumber\r\n        this.props.incrementAsync(value*1,500)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我的Count组件 下方组件总人数为：{this.props.personCount}</h2>\r\n                <h4>当前求和为：{this.props.count}</h4>\r\n                <select ref={c => this.selectNumber = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;\r\n                <button onClick={this.incrementIfOdd}>奇数在加</button>&nbsp;\r\n                <button onClick={this.incrementAsync}>异步加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 使用connect()()创建并暴露一个Count的容器组件 \r\nexport default connect(\r\n    state => (\r\n        {\r\n            count:state.count,\r\n            personCount:state.persons.length\r\n        }\r\n    ),//映射状态\r\n    {increment,decrement,incrementAsync} //映射状态的方法\r\n)(Count)\r\n","import React, { Component } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport {connect} from 'react-redux'\r\nimport {addPerson} from '../../redux/actions/person'\r\n\r\nclass Person extends Component {\r\n    addPerson = () => {\r\n        // const {value: name} = this.nameNode\r\n        // const {value: age} = this.ageNode\r\n        const name = this.nameNode.value\r\n        const  age = this.ageNode.value\r\n        const personObj = {id: nanoid(),name,age}\r\n        this.props.addPerson(personObj)\r\n        this.nameNode.value = ''\r\n        this.ageNode.value = ''\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Person组件,上方组件求和为：{this.props.count}</h2>\r\n               <input ref={c => this.nameNode = c} type=\"text\" placeholder=\"请输入名字\"/>\r\n               <input ref={c => this.ageNode = c}  type=\"text\" placeholder=\"请输入年龄\"/>\r\n               <button onClick={this.addPerson}>添加</button>\r\n               <ul>\r\n                   {\r\n                       this.props.persons.map(p => {\r\n                           return <li key={p.id}>{p.name}---{p.age}</li>\r\n                       })\r\n                   }\r\n               </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 使用connect()()创建并暴露一个Count的容器组件 \r\nexport default connect(\r\n    state => (\r\n        {\r\n            persons:state.persons,\r\n            count:state.count\r\n        }\r\n    ), //映射状态\r\n    {addPerson} //映射操作状态的方法\r\n)(Person)\r\n","import {ADD_PERSON} from '../constant'\r\n\r\n// 创建增加一个人的action动作对象\r\nexport const addPerson = personObj => ({type:ADD_PERSON,data:personObj})","import React,{Component} from 'react'\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Count/>\r\n                <hr/>\r\n                <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}","import {ADD_PERSON} from '../constant'\r\n\r\n// 初始化人的列表\r\nconst initState = [{id:'001',name:\"tom\",age:18}]\r\n\r\nexport default function personReducer (preState=initState,action){\r\n    // console.log('初始化Persons状态',preState,'action',action)\r\n    const {type,data} = action\r\n    switch (type) {\r\n        case ADD_PERSON: // 若是添加一个人\r\n            // preState.unshift(data) //此处不可以这样写，这样会导致preState被改写了，personReducer就不是纯函数了\r\n            // return preState\r\n            return [data,...preState]\r\n    \r\n        default:\r\n           return preState\r\n    }\r\n}","/*\r\n    该文件用于汇总所有的reducer为一个总的reducer\r\n*/ \r\n// 引入combineReducer，用于汇总多个reducer\r\nimport {combineReducers} from 'redux'\r\n\r\n// 引入为Count组件服务的reducer\r\nimport count from './count'\r\n// 引入为Person组件服务的reducer\r\nimport persons from './person'\r\n\r\n// 汇总所有的reducer变为一个总的reducer 并暴露\r\nexport default combineReducers({\r\n    count,\r\n    persons\r\n})","/*\r\n    1.该文件是用于创建为Count组件服务的reducer,reducer本质就是一个函数\r\n    2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\r\n*/\r\nimport {INCREMENT,DECREMENT} from '../constant'\r\nconst initState = 0;\r\nexport default function countReducer(preState = initState, action) {\r\n    // console.log('初始化Count状态',preState,'action',action)\r\n  // 从action对象中获取：type、data\r\n  const { type, data } = action;\r\n  //根据type决定如何加工数据\r\n  switch (type) {\r\n    case INCREMENT: //如果是加\r\n      return preState + data;\r\n    case DECREMENT: //若是减\r\n      return preState - data;\r\n    default:\r\n        return preState\r\n  }\r\n}\r\n","/*\r\n    该文件专门用于暴露store对象,整个应用只有一个store对象\r\n*/ \r\n// 引入createStore,专门用于创建redux中最为核心的store对象\r\nimport {createStore,applyMiddleware} from 'redux'\r\n// 引入汇总后的reducer\r\nimport reducer from './reducers'\r\n// 引入redux-thunk,用于支持异步action\r\nimport thunk from 'redux-thunk'\r\n// 引入redux-devtools-extension\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n// 暴露store\r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n     /* 此处需要用Provider包裹App，目的是让App所有的后代容器组件能够接受到store */\r\n    <Provider store={store}>\r\n         <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}